template: true
valuesFilePath: ./values.yml

resources:
  - name: {{ .Values.myPipeline.resourcesPrefix }}git_resource
    type: GitRepo
    configuration:
      gitProvider: {{ .Values.myRepo.gitProvider }}
      path: {{ .Values.myRepo.path }}
      branches:
        include: {{ .Values.myRepo.branch }}

  - name: {{ .Values.myPipeline.resourcesPrefix }}helm_chart
    type: HelmChart
    configuration:
      sourceArtifactory: {{ .Values.myHelmChart.artifactoryProvider }}
      repository: {{ .Values.myHelmChart.repository }}
      chart: {{ .Values.myHelmChart.chartName }}
      version: {{ .Values.myHelmChart.chartVersion }}

pipelines:
  - name: {{ .Values.myPipeline.name }}
    steps:
      - name: pre_helm_deploy
        type: Bash
        configuration:
          inputResources:
            - name: {{ .Values.myPipeline.resourcesPrefix }}git_resource
              trigger: false
        execution:
          onExecute:
            - echo "Hello JFrog Pipelines!"
            - echo $res_{{ .Values.myPipeline.resourcesPrefix }}git_resource_resourcePath

      - name: helm_deploy
        type: HelmDeploy
        configuration:
          # runtime:      
          #   type: image
          #   image:
          #     custom:
          #       name: releases-docker.jfrog.io/jfrog/pipelines-u18go
          #       tag: "1.15.2"
          # nodePool: MyDynamicGCPNode
          helmVersion: 3
          releaseName: {{ .Values.myHelmChart.releaseName }} 
          dryRun: true
          flags: "{{ .Values.myHelmChart.flags }}"
          environmentVariables:
            HELM_NAMESPACE: {{ .Values.myHelmChart.namespace }}          
          integrations:
            - name: {{ .Values.myKubernetes.integrationName }}
          inputResources:
            - name: {{ .Values.myPipeline.resourcesPrefix }}helm_chart
          inputSteps:
            - name: pre_helm_deploy

  - name: {{ .Values.myPipeline.deleteName }}
    steps:
      - name: pre_helm_delete
        type: Bash
        configuration:
          inputResources:
            - name: {{ .Values.myPipeline.resourcesPrefix }}git_resource
              trigger: false
        execution:
          onExecute:
            - echo $res_{{ .Values.myPipeline.resourcesPrefix }}git_resource_resourcePath

      - name: helm_delete
        type: Bash
        configuration:
          inputSteps:
            - name: pre_helm_delete
          inputResources:
            - name: {{ .Values.myPipeline.resourcesPrefix }}git_resource
        execution:
          onExecute:
            - echo "Hello JFrog Pipelines!"
            - which helm 
            - which helm3

